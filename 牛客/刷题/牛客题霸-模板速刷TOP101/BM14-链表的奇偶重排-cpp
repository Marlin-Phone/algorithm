/**
 * @nc app=nowcoder id=02bf49ea45cd486daa031614f9bd6fc3 topic=295 question=1073463 lang=C++
 * 2025-08-09 20:41:38
 * https://www.nowcoder.com/practice/02bf49ea45cd486daa031614f9bd6fc3?tpId=295&tqId=1073463
 * [BM14] 链表的奇偶重排
 */

/** @nc code=start */

/**
 * struct ListNode {
 *	int val;
 *	struct ListNode *next;
 *	ListNode(int x) : val(x), next(nullptr) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param head ListNode类 
     * @return ListNode类
     */
    ListNode* oddEvenList(ListNode* head) {
        // ListNode* dummy = new ListNode(0);
        // dummy->next = head;
        if(head == nullptr || head->next == nullptr){ 
            return head;
        }
        ListNode *even = head;
        ListNode *oddHead = head->next;
        ListNode *odd = oddHead;
        while(even != nullptr && even->next != nullptr && odd != nullptr && odd->next != nullptr){
            even->next = even->next->next;
            odd->next = odd->next->next;
            even = even->next;
            odd = odd->next;
        }
        while(even != nullptr && even->next != nullptr){
            even->next = nullptr;
        }
        while(odd != nullptr && odd->next != nullptr){
            odd->next = nullptr;
        }
        //
        // ListNode* cur = head;
        // while(cur != nullptr){
        //     cout << cur->val << endl;
        //     cur = cur->next;
        // }
        // cur = oddHead;
        // while(cur != nullptr){
        //     cout << cur->val << endl;
        //     cur = cur->next;
        // }
        // 
        ListNode* pre = head;
        while(pre->next != nullptr){
            pre = pre->next;
        }
        pre->next = oddHead;
        
        return head;
    }
};

/** @nc code=end */
