#include <bits/stdc++.h>
using namespace std;
/**
 * @nc app=nowcoder id=4edf6e6d01554870a12f218c94e8a299 topic=295
 * question=1267319 lang=C++ 2025-09-08 20:52:48
 * https://www.nowcoder.com/practice/4edf6e6d01554870a12f218c94e8a299?tpId=295&tqId=1267319
 * [BM96] 主持人调度（二）
 */

/** @nc code=start */

class Solution {
  public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 计算成功举办活动需要多少名主持人
     * @param n int整型 有n个活动
     * @param startEnd int整型vector<vector<>>
     * startEnd[i][0]用于表示第i个活动的开始时间，startEnd[i][1]表示第i个活动的结束时间
     * @return int整型
     */
    priority_queue<int, vector<int>, greater<int>> heap;
    int minmumNumberOfHost(int n, vector<vector<int>> &startEnd) {
        sort(startEnd.begin(), startEnd.end());
        int max_size = 0;
        for (auto &t : startEnd) {
            int cur_st = t[0];
            int cur_ed = t[1];
            if (!heap.empty() && heap.top() <= cur_st) {
                heap.pop();
            }
            heap.push(cur_ed);
            max_size = max(max_size, (int)heap.size());
        }

        return max_size;
    }
};

/** @nc code=end */
