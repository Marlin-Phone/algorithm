/**
 * @nc app=nowcoder id=8a2b2bf6c19b4f23a9bdb9b233eefa73 topic=295 question=642 lang=C++
 * 2025-08-17 23:47:39
 * https://www.nowcoder.com/practice/8a2b2bf6c19b4f23a9bdb9b233eefa73?tpId=295&tqId=642
 * [BM28] 二叉树的最大深度
 */

/** @nc code=start */

/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 *	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param root TreeNode类 
     * @return int整型
     */
    int maxDepth(TreeNode* root) {
        if(root == nullptr){
            return 0;
        }
        int left = 0, right = 0;
        if(root->left){
            left = maxDepth(root->left);
        }
        if(root->right){
            right = maxDepth(root->right);
        }

        return max(left, right) + 1;
    }
};

/** @nc code=end */
