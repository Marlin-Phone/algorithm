#include <bits/stdc++.h>
using namespace std;
/**
 * @nc app=nowcoder id=20ef0972485e41019e39543e8e895b7f topic=295 question=745
 * lang=C++ 2025-08-20 15:47:55
 * https://www.nowcoder.com/practice/20ef0972485e41019e39543e8e895b7f?tpId=295&tqId=745
 * [BM50] 两数之和
 */

/** @nc code=start */

class Solution {
  public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param numbers int整型vector
     * @param target int整型
     * @return int整型vector
     */
    vector<int> twoSum(vector<int> &numbers, int target) {
        vector<int> ans;
        // 步骤1：创建带索引的数组
        vector<pair<int, int>> numsWithIndex;
        for (int i = 0; i < numbers.size(); ++i) {
            numsWithIndex.push_back({numbers[i], i});
        }

        // 步骤2：排序
        sort(numsWithIndex.begin(), numsWithIndex.end());

        // 步骤3：双指针查找
        int left = 0, right = numsWithIndex.size() - 1;
        while (left < right) {
            int sum = numsWithIndex[left].first + numsWithIndex[right].first;
            if (sum == target) {
                // 找到目标，计算实际下标（+1）
                int idx1 = numsWithIndex[left].second + 1;
                int idx2 = numsWithIndex[right].second + 1;
                return {min(idx1, idx2), max(idx1, idx2)};
            } else if (sum < target) {
                left++; // 和太小，左指针右移
            } else {
                right--; // 和太大，右指针左移
            }
        }
        return {};
    }
};

/** @nc code=end */
