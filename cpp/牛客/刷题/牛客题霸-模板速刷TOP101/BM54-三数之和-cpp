#include <bits/stdc++.h>
using namespace std;
/**
 * @nc app=nowcoder id=345e2ed5f81d4017bbb8cc6055b0b711 topic=295 question=731
 * lang=C++ 2025-08-30 00:00:57
 * https://www.nowcoder.com/practice/345e2ed5f81d4017bbb8cc6055b0b711?tpId=295&tqId=731
 * [BM54] 三数之和
 */

/** @nc code=start */

class Solution {
  public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param num int整型vector
     * @return int整型vector<vector<>>
     */
    vector<vector<int>> threeSum(vector<int> &num) {
        sort(num.begin(), num.end());
        int n = num.size();
        vector<vector<int>> res;
        int idx = n - 1;
        for (int i = 0; i < n - 2; i++) {
            if (i > 0 && num[i] == num[i - 1]) {
                continue;
            }
            int l = i + 1, r = n - 1;
            while (l < r) {
                int sum = num[i] + num[l] + num[r];
                if (sum < 0) {
                    l++;
                } else if (sum > 0) {
                    r--;
                } else {
                    res.push_back({num[i], num[l], num[r]});
                    while (l < r && num[l] == num[l + 1])
                        l++;
                    while (l < r && num[r] == num[r - 1])
                        r--;
                    l++;
                }
            }
        }
        return res;
    }
};

/** @nc code=end */
