#include <bits/stdc++.h>
using namespace std;
/**
 * @nc app=nowcoder id=c76408782512486d91eea181107293b6 topic=295
 * question=1008753 lang=C++ 2025-08-27 01:07:04
 * https://www.nowcoder.com/practice/c76408782512486d91eea181107293b6?tpId=295&tqId=1008753
 * [BM59] N皇后问题
 */

/** @nc code=start */

class Solution {
  public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param n int整型 the n
     * @return int整型
     */
    vector<int> arr;
    vector<bool> st;
    bool check(int x) {
        for (int i = 0; i < x; i++) {
            if (abs(arr[i] - arr[x]) == abs(i - x)) {
                return false;
            }
        }
        return true;
    }
    int dfs(int x, int n) {
        if (x == n) {
            return 1;
        }
        int ans = 0;
        for (int i = 0; i < n; i++) {
            if (st[i]) {
                continue;
            }
            st[i] = true;
            arr[x] = i;
            if (check(x)) {
                ans += dfs(x + 1, n);
                cout << "ans = " << ans << endl;
            }
            st[i] = false;
        }
        return ans;
    }
    int Nqueen(int n) {
        st.resize(n);
        arr.resize(n);
        int ans = 0;
        ans = dfs(0, n);
        return ans;
    }
};

/** @nc code=end */
