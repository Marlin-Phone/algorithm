/**
 * @nc app=nowcoder id=71cef9f8b5564579bf7ed93fbe0b2024 topic=295 question=663 lang=C++
 * 2025-08-10 10:40:59
 * https://www.nowcoder.com/practice/71cef9f8b5564579bf7ed93fbe0b2024?tpId=295&tqId=663
 * [BM16] 删除有序链表中重复的元素-II
 */

/** @nc code=start */

/**
 * struct ListNode {
 *	int val;
 *	struct ListNode *next;
 *	ListNode(int x) : val(x), next(nullptr) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param head ListNode类 
     * @return ListNode类
     */
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode *dummy = new ListNode(0);
        dummy->next = head;
        ListNode* pre = dummy;   
        ListNode* cur = head;

        while(cur != nullptr){
            if(cur->next != nullptr && cur->val == cur->next->val){
                int val = cur->val;
                while(cur != nullptr && cur->val == val){
                    cur = cur->next;
                }
                pre->next = cur;
            }else{
                pre = cur;
                cur = cur->next;
            }
        }     
        return dummy->next;
    }
};

/** @nc code=end */
